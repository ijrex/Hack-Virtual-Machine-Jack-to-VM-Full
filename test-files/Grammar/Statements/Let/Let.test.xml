<class>
	<keyword> class </keyword>
	<identifier>
		<name> Main </name>
		<category> CLASS_DEC </category>
		<runningIndex> -1 </runningIndex>
	</identifier>
	<symbol> { </symbol>
	<classVarDec>
		<keyword> static </keyword>
		<keyword> int </keyword>
		<symbolEntry>
			<name> letStatement1 </name>
			<type> int </type>
			<key> 0 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> , </symbol>
		<symbolEntry>
			<name> a </name>
			<type> int </type>
			<key> 1 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> , </symbol>
		<symbolEntry>
			<name> b </name>
			<type> int </type>
			<key> 2 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> , </symbol>
		<symbolEntry>
			<name> c </name>
			<type> int </type>
			<key> 3 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> , </symbol>
		<symbolEntry>
			<name> d </name>
			<type> int </type>
			<key> 4 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> ; </symbol>
	</classVarDec>
	<classVarDec>
		<keyword> static </keyword>
		<identifier>
			<name> Array </name>
			<category> SYMBOL_DEC </category>
			<runningIndex> -1 </runningIndex>
		</identifier>
		<symbolEntry>
			<name> letStatement2 </name>
			<type> Array </type>
			<key> 5 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> ; </symbol>
	</classVarDec>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier>
			<name> main </name>
			<category> SUBROUTINE_DEC </category>
			<runningIndex> -1 </runningIndex>
		</identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<statements>
				<letStatement>
					<keyword> let </keyword>
					<identifier>
						<name> letStatement1 </name>
						<category> STATIC </category>
						<runningIndex> 0 </runningIndex>
					</identifier>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier>
								<name> a </name>
								<category> STATIC </category>
								<runningIndex> 1 </runningIndex>
							</identifier>
						</term>
						<symbol> + </symbol>
						<term>
							<identifier>
								<name> b </name>
								<category> STATIC </category>
								<runningIndex> 2 </runningIndex>
							</identifier>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
				<letStatement>
					<keyword> let </keyword>
					<identifier>
						<name> letStatement2 </name>
						<category> STATIC </category>
						<runningIndex> 5 </runningIndex>
					</identifier>
					<symbol> [ </symbol>
					<expression>
						<term>
							<identifier>
								<name> a </name>
								<category> STATIC </category>
								<runningIndex> 1 </runningIndex>
							</identifier>
						</term>
					</expression>
					<symbol> ] </symbol>
					<symbol> = </symbol>
					<expression>
						<term>
							<identifier>
								<name> c </name>
								<category> STATIC </category>
								<runningIndex> 3 </runningIndex>
							</identifier>
						</term>
						<symbol> + </symbol>
						<term>
							<identifier>
								<name> d </name>
								<category> STATIC </category>
								<runningIndex> 4 </runningIndex>
							</identifier>
						</term>
					</expression>
					<symbol> ; </symbol>
				</letStatement>
			</statements>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
