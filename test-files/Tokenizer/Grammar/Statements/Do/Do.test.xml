<class>
	<keyword> class </keyword>
	<identifier>
		<name> Main </name>
		<category> CLASS_DEC </category>
		<runningIndex> -1 </runningIndex>
	</identifier>
	<symbol> { </symbol>
	<classVarDec>
		<keyword> static </keyword>
		<keyword> int </keyword>
		<symbolEntry>
			<name> nop </name>
			<type> int </type>
			<key> 0 </key>
			<kind> STATIC </kind>
		</symbolEntry>
		<symbol> ; </symbol>
	</classVarDec>
	<subroutineDec>
		<keyword> function </keyword>
		<keyword> void </keyword>
		<identifier>
			<name> main </name>
			<category> SUBROUTINE_DEC </category>
			<runningIndex> -1 </runningIndex>
		</identifier>
		<symbol> ( </symbol>
		<parameterList>
		</parameterList>
		<symbol> ) </symbol>
		<subroutineBody>
			<symbol> { </symbol>
			<statements>
				<doStatement>
					<keyword> do </keyword>
					<identifier>
						<name> abc </name>
						<category> SUBROUTINE </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> ( </symbol>
					<expressionList>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
				<doStatement>
					<keyword> do </keyword>
					<identifier>
						<name> abc </name>
						<category> CLASS </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> . </symbol>
					<identifier>
						<name> def </name>
						<category> SUBROUTINE </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> ( </symbol>
					<expressionList>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
				<doStatement>
					<keyword> do </keyword>
					<identifier>
						<name> abc </name>
						<category> CLASS </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> . </symbol>
					<identifier>
						<name> def </name>
						<category> SUBROUTINE </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> ( </symbol>
					<expressionList>
						<expression>
							<term>
								<identifier>
									<name> nop </name>
									<category> STATIC </category>
									<runningIndex> 0 </runningIndex>
								</identifier>
							</term>
						</expression>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
				<doStatement>
					<keyword> do </keyword>
					<identifier>
						<name> abc </name>
						<category> CLASS </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> . </symbol>
					<identifier>
						<name> def </name>
						<category> SUBROUTINE </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> ( </symbol>
					<expressionList>
						<expression>
							<term>
								<identifier>
									<name> ghi </name>
									<category> SUBROUTINE </category>
									<runningIndex> -1 </runningIndex>
								</identifier>
								<symbol> ( </symbol>
								<expressionList>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
				<doStatement>
					<keyword> do </keyword>
					<identifier>
						<name> abc </name>
						<category> CLASS </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> . </symbol>
					<identifier>
						<name> def </name>
						<category> SUBROUTINE </category>
						<runningIndex> -1 </runningIndex>
					</identifier>
					<symbol> ( </symbol>
					<expressionList>
						<expression>
							<term>
								<identifier>
									<name> ghi </name>
									<category> CLASS </category>
									<runningIndex> -1 </runningIndex>
								</identifier>
								<symbol> . </symbol>
								<identifier>
									<name> jkm </name>
									<category> SUBROUTINE </category>
									<runningIndex> -1 </runningIndex>
								</identifier>
								<symbol> ( </symbol>
								<expressionList>
								</expressionList>
								<symbol> ) </symbol>
							</term>
						</expression>
					</expressionList>
					<symbol> ) </symbol>
					<symbol> ; </symbol>
				</doStatement>
			</statements>
			<symbol> } </symbol>
		</subroutineBody>
	</subroutineDec>
	<symbol> } </symbol>
</class>
